<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:view="clr-namespace:UtilityWpf.Controls.Buttons">

    <Style TargetType="Button" x:Key="CloseButtonStyle">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="1"
                                            BorderBrush="LightGray"
                                            CornerRadius="5">
                        <StackPanel Orientation="Horizontal">

                            <ContentPresenter VerticalAlignment="Center" Margin="8,0,4,0" />

                            <Viewbox Height="{TemplateBinding Height}">
                                <view:XGeometryButton Margin="50" />
                            </Viewbox>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkGray" />
                            <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            <Setter Property="FontSize" Value="16" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="border"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="1"
                                            BorderBrush="LightGray"
                                            CornerRadius="5">
                        <StackPanel Orientation="Horizontal">

                            <ContentPresenter VerticalAlignment="Center" Margin="8,0,4,0" />

                            <Viewbox Height="{TemplateBinding Height}">
                                <view:XGeometryButton Margin="100,100,50,100" />
                            </Viewbox>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="BorderBrush" Value="DarkGray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ListBoxItemControlTemplate" TargetType="{x:Type ListBoxItem}">
        <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected"
                                 Value="true">
                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                                           Value="true"/>
                    <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                                 Value="false">
                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}" Value="false"/>
                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="FocusVisualStyle" Value="{StaticResource ListBoxItemHighContrastFocusVisual}"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>