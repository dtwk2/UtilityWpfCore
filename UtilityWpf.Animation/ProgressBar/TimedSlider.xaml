<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
                    xmlns:testApp1="clr-namespace:UtilityWpf.Animation" 
                    xmlns:utilitywpf="clr-namespace:UtilityWpf;assembly=UtilityWpf">
 
        <ResourceDictionary.MergedDictionaries>

            <utilitywpf:SharedResourceDictionary Source="pack://application:,,,/UtilityWpf.Animation;component/ProgressBar/FlashThumb.xaml" />
            <!--<utilitywpf:SharedResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />-->

        </ResourceDictionary.MergedDictionaries>


        <!--  MahApps Brushes  -->
        <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource Primary700}" />
        <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource Primary500}" />
        <SolidColorBrush x:Key="AccentColorBrush2" Color="{DynamicResource Primary400}" />
        <SolidColorBrush x:Key="AccentColorBrush3" Color="{DynamicResource Primary300}" />
        <SolidColorBrush x:Key="AccentColorBrush4" Color="{DynamicResource Primary200}" />
        <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource Primary700}" />
        <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{DynamicResource Primary500Foreground}" />
        <LinearGradientBrush x:Key="ProgressBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5">
            <GradientStop Offset="0" Color="{DynamicResource Primary700}" />
            <GradientStop Offset="1" Color="{DynamicResource Primary300}" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="CheckmarkFill" Color="{DynamicResource Primary500}" />
        <SolidColorBrush x:Key="RightArrowFill" Color="{DynamicResource Primary500}" />
        <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{DynamicResource Primary500Foreground}" />
        <SolidColorBrush
                x:Key="IdealForegroundDisabledBrush"
                Opacity="0.4"
                Color="{DynamicResource Primary500}" />

        <SolidColorBrush x:Key="MaterialDesignFlatButtonClick" Color="#10000000" />
        <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="#FFFFFFFF" />

        <Style TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
        </Style>



        <Style x:Key="MaterialDesignRepeatButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <ControlTemplate x:Key="MaterialDesignTimedSlider" TargetType="{x:Type Slider}">

            <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True">
                <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Rectangle Grid.Row="1" Fill="{TemplateBinding Foreground}" Height="4" Opacity="0.38" VerticalAlignment="Center" RadiusX="2" RadiusY="2" />
                    <testApp1:TimedProgressBar
                    x:Name="activeTrack"
                    Grid.Row="1"
                      Style="{DynamicResource MaterialDesignLinearProgressBar}"
                    Duration="{Binding
                                        Path=Value,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Slider}},
                                        Converter={StaticResource DurationConverter}}"
                    Height="8"
                    Width="{Binding DecreaseRepeatButton.ActualWidth, ElementName=PART_Track}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center" />
                    <!--  Selection range must be wrapped in a Canvas for the position to be updated correctly  -->
                    <Canvas Grid.Row="1" VerticalAlignment="Center" Height="6">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="6" RadiusX="2" RadiusY="2" Visibility="Collapsed" />
                    </Canvas>
                    <Track x:Name="PART_Track" Grid.Row="1" Height="20">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                        </Track.IncreaseRepeatButton>
                        <!--  It's important that the Thumb gets added last in the XAML to make sure it is drawn on top of both repeat buttons  -->
                        <Track.Thumb>
                            <!--<Thumb Template="{StaticResource MaterialDesignSliderThumb2}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />-->
                            <testApp1:FlashThumb SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                                                  
                                  
                                   Duration="{Binding
                                        Path=Value,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Slider}},
                                        Converter={StaticResource DurationConverter}}">
                                <!--<i:Interaction.Triggers>
                                        <i:EventTrigger  EventName="DragCompleted" >
                                          <i:InvokeCommandAction Command="{Binding Flash, RelativeSource={RelativeSource AncestorType=local:FlashThumb}}"></i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                            </testApp1:FlashThumb>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsDirectionReversed" Value="True">
                    <!--<Setter TargetName="activeTrack" Property="CornerRadius" Value="0,3,3,0" />-->
                    <Setter TargetName="activeTrack" Property="HorizontalAlignment" Value="Right" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

</ResourceDictionary>