<UserControl
    x:Class="UtilityWpf.Demo.View.NotesUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
    xmlns:local="clr-namespace:UtilityWpf.Demo.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="http://schemas.utility.com" 
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:vm="clr-namespace:UtilityWpf.Demo.Sandbox.ViewModel"
    xmlns:conv="clr-namespace:UtilityWpf.Converter;assembly=UtilityWpf"
    d:DesignHeight="450"
    d:Background="White"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <FrameworkElement.DataContext>
        <vm:NotesViewModel />
    </FrameworkElement.DataContext>
    <FrameworkElement.Resources>
        <ResourceDictionary>

            <EllipseGeometry x:Key="DotGeometry" Center="0,0" RadiusX="1" RadiusY="1" />

            <Style x:Key="DragablzItemStyle3" TargetType="dragablz:DragablzItem">

                <!--<Setter Property="Padding" Value="0 4 0 4" />-->
                <!--<Setter Property="Margin" Value="8,0,8,0" />-->
                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                <!--<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=ActualWidth, Converter={x:Static conv:DefaultConverter.Instance}}"></Setter>-->
                <Setter Property="Width"                 >
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static conv:ActualWidthConverter.Instance}">
                            <Binding RelativeSource="{RelativeSource AncestorType=ItemsControl}" Path="ActualWidth" ></Binding>
                            <Binding RelativeSource="{RelativeSource AncestorType=ScrollViewer}" ></Binding>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="MinWidth" Value="100"></Setter>

                <!--  here we create a custom item container, to animate a card popping out towards the user as it is dragged  -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">

                            <Viewbox HorizontalAlignment="Stretch" RenderTransformOrigin=".5, .5">

                                <Viewbox.RenderTransform>
                                    <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                                </Viewbox.RenderTransform>
                                <Border BorderBrush="Gray" HorizontalAlignment="Stretch" BorderThickness="0.3" CornerRadius="8" Grid.Column="0" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <materialDesign:Card x:Name="PART_Card" Height="0" Width="0"></materialDesign:Card>


                                        <ContentPresenter Margin="8,1,8,1"  Width="200" Grid.Column="1" />


                                        <Thumb VerticalAlignment="Center"  dragablz:DragablzItem.IsCustomThumb="True" Height="15" Width="15" >
                                            <Thumb.Template>
                                                <ControlTemplate>

                                                    <Border  Name="OutBox" >
                                                        <Grid >
                                                            <Path   Margin="4,0,0,0"
                                                                    x:Name="PathLeft"
                                        Width="4"
                                        Height="4"
                                         Visibility="Visible"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{StaticResource DotGeometry}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Uniform"
                                        Stroke="Black"
                                        StrokeThickness="2">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <TranslateTransform />
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>


                                                        </Grid>
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Setters>
                                                                    <Setter Property="Background" >
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="Yellow" Opacity="0.0"></SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="CornerRadius" Value="5"></Setter>
                                                                </Style.Setters>

                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Cursor" Value="Hand" />
                                                                    </Trigger>
                                                                    <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                                                        <BeginStoryboard>
                                                                            <Storyboard>

                                                                                <DoubleAnimation
                                             Storyboard.TargetProperty="Background.Opacity"
                                             From="0"
                                             To="0.5"
                                             Duration="0:0:0.2"
                                             
                                             />
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </EventTrigger>
                                                                    <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                                                        <BeginStoryboard>
                                                                            <Storyboard>

                                                                                <DoubleAnimation
                                             Storyboard.TargetProperty="Background.Opacity"
                                             From="0.5"
                                             To="0"
                                             Duration="0:0:0.2"
                                             
                                             />
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </EventTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Grid>

                                </Border>
                            </Viewbox>



                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDragging" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Enter}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource Exit}" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UtilityWpf.Controls;component/Themes/DragablzItem.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </FrameworkElement.Resources>

    <local:AddDragItemControl CommandParameter="{Binding NewItem}" RemoveOrder="Last" ButtonTypes="Add,Remove"  >
        <local:AddDragItemControl.Background>
            <VisualBrush   
                                                TileMode="Tile" Viewport="0,0,10,10" 
                                                ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                                                ViewboxUnits="Absolute">
                <VisualBrush.Visual>
                    <Canvas>
                        <Rectangle  Width="10" Height="10" />
                        <Path Stroke="WhiteSmoke" Data="M 0 0 l 10 10" />
                    </Canvas>
                </VisualBrush.Visual>
            </VisualBrush>
        </local:AddDragItemControl.Background>
        <i:Interaction.Triggers>
            <i:EventTrigger  EventName="Change" >
                <i:InvokeCommandAction Command="{Binding ChangeCommand}" PassEventArgsToCommand="True"></i:InvokeCommandAction>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <view:DragablzVerticalItemsControl x:Name="DragablzItemsControl" 
                                                       ItemsSource="{Binding Collection}"                                                       
                                                       VerticalAlignment="Center"      
                                               ItemTemplate="{StaticResource NoteViewModel}"
                                                       ItemContainerStyle="{StaticResource DragablzItemStyle3}"
                                                       >
        </view:DragablzVerticalItemsControl>
    </local:AddDragItemControl>

</UserControl>