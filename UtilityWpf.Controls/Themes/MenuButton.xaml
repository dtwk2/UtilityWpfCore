<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:UtilityWpf.Controls">

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type local:MenuButton}">
        <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsDropDownOpen, Mode=TwoWay}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:MenuButton}, Path=Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="15" />
                        </Grid.ColumnDefinitions>

                        <ContentControl Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:MenuButton}, Path=Content}" />
                        <Path
                            Grid.Column="1"
                            Margin="2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="M0,0L3,3 6,0z"
                            Fill="Black"
                            IsHitTestVisible="False" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="DropDown" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DropDown.HasItems}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  DropDown for MenuButton:  -->
    <Style
        x:Key="{x:Static local:MenuButton.MenuDropDownStyleKey}"
        BasedOn="{StaticResource {x:Type ContextMenu}}"
        TargetType="ContextMenu">
        <Setter Property="IsOpen" Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:MenuButton.ParentMenuButton).IsDropDownOpen}" />
        <Setter Property="MinWidth" Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:MenuButton.ParentMenuButton).ActualWidth}" />
        <Setter Property="Placement" Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:MenuButton.ParentMenuButton).DropDownPlacement}" />
        <Setter Property="PlacementTarget" Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:MenuButton.ParentMenuButton)}" />
        <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}, Path=(local:MenuButton.ParentMenuButton).DataContext}" />
    </Style>

    <!--  MenuButton on ToolBar:  -->
    <Style
        x:Key="{x:Static local:ToolBarStyleKeys.MenuButtonStyleKey}"
        BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
        TargetType="{x:Type local:MenuButton}">
        <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsDropDownOpen, Mode=TwoWay}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:MenuButton}, Path=Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="15" />
                        </Grid.ColumnDefinitions>

                        <ContentControl Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:MenuButton}, Path=Content}" />
                        <Path
                            Grid.Column="1"
                            Margin="2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="M0,0L3,3 6,0z"
                            Fill="Black"
                            IsHitTestVisible="False" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="DropDown" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DropDown.HasItems}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>