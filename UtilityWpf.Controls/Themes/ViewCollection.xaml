<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:utils="clr-namespace:UtilityWpf.Controls.Panels">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="IconButtonStyle"
        BasedOn="{StaticResource MaterialDesignOutlinedButton}"
        TargetType="Button">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="120" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=OneWay}" />
        <!--<Setter Property="utils:RegionPanel.Region" Value="{Binding Region}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <!--  Based on MaterialDesignOutlinedButton in MaterialDesignThemes.Wpf/Themes/MaterialDesignTheme.Button.xaml  -->
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <materialDesign:Ripple
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style BasedOn="{StaticResource {x:Type ItemsControl}}" TargetType="{x:Type controls:CollectionView}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    --><!--<WrapPanel Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=controls:CollectionView}}" />--><!--
                    <controls11:CornerPanel IsLastChildFilled="False" />

                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource IconButtonStyle}" />

    </Style>-->
</ResourceDictionary>