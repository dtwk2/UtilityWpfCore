<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:UtilityWpf.Controls"
    xmlns:converter="clr-namespace:UtilityWpf.Converter;assembly=UtilityWpf">

    <Style TargetType="{x:Type controls:DualButtonControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DualButtonControl}">
                    <WrapPanel Margin="4">
                        <RadioButton
                            x:Name="EditButton"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonWidth}"
                            Margin="4"
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Main}"
                            IsChecked="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                            Style="{DynamicResource MaterialDesignTabRadioButton}" />

                        <RadioButton
                            x:Name="Edit2Button"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonWidth}"
                            Margin="4"
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Alternate}"
                            IsChecked="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converter:InverseBooleanConverter.Instance}, Mode=OneWay}"
                            Style="{DynamicResource MaterialDesignTabRadioButton}" />
                    </WrapPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <converter:BooleanToDoubleConverter
        x:Key="Standard"
        ValueFalse="0.5"
        ValueTrue="1.0" />
    <converter:BooleanToDoubleConverter
        x:Key="Inverse"
        ValueFalse="1"
        ValueTrue="0.5" />

    <Style x:Key="OutlinedDualButtonControl" TargetType="{x:Type controls:DualButtonControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DualButtonControl}">
                    <WrapPanel Margin="4" Orientation="Vertical">
                        <Button
                            x:Name="EditButton"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonWidth}"
                            Margin="4"
                            BorderThickness="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converter:BooleanToIntConverter.Instance}}"
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Main}"
                            Opacity="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Standard}}"
                            Style="{DynamicResource MaterialDesignOutlinedButton}" />

                        <Button
                            x:Name="Edit2Button"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonWidth}"
                            Margin="4"
                            BorderThickness="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converter:BooleanToIntInverseConverter.Instance}}"
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Alternate}"
                            Opacity="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Inverse}}"
                            Style="{DynamicResource MaterialDesignOutlinedButton}" />
                    </WrapPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>