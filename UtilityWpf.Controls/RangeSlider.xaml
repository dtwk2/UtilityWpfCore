<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:UtilityWpf.Controls" 
    xmlns:infra="clr-namespace:UtilityWpf.Controls.Panels" 
     xmlns:converter="clr-namespace:UtilityWpf.Converter;assembly=UtilityWpf" xmlns:infra1="http://schemas.utility.com/panels">

    <ResourceDictionary.MergedDictionaries />
    <converter:ThicknessConverter x:Key="ThicknessConverter"></converter:ThicknessConverter>
    <Geometry x:Key="RightGeometry">M0,0 L50,50 L0,100</Geometry>
    <Geometry x:Key="LeftGeometry">M50,0 L0,50 L50,100</Geometry>

    <Style x:Key="GripThumbStyle" TargetType="Thumb">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">

                    <Border  Name="OutBox"  Height="{TemplateBinding Height}">
                        
                        <Grid Width="30" >
                            <Border Width="2" Background="Red"  Height="50"/>

                            <Path   Margin="0,0,0,2"
                                        x:Name="PathLeft"
                                        Width="15"
                                        Height="15"
                                         Visibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Data="{StaticResource LeftGeometry}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Uniform"
                                        Stroke="Black"
                                        StrokeThickness="2">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>

                            <Path   Margin="0,0,0,2"
                                        x:Name="PathRight"
                                    Visibility="Collapsed"
                                        Width="15"
                                        Height="15"
                                          VerticalAlignment="Bottom"
                                        HorizontalAlignment="Right"
                                        Data="{StaticResource RightGeometry}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Uniform"
                                        Stroke="Black"
                                        StrokeThickness="2">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                            <Setter TargetName="OutBox" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
                            <Setter TargetName="PathLeft" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PathRight" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OutBox" Property="Opacity" Value="0.2" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource AncestorType=local:RangeSlider}}" Value="Vertical">
                            <Setter TargetName="OutBox" Property="Width" Value="Auto" />
                            <Setter TargetName="OutBox" Property="Height" Value="16" />
                            <Setter TargetName="OutBox" Property="Margin" Value="0,-8" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RangeSliderThumbStyle" TargetType="Thumb">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        Name="OutBox"
                        Width="8"
                        Height="{TemplateBinding Height}"                 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OutBox" Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                            <Setter TargetName="OutBox" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource AncestorType=local:RangeSlider}}" Value="Vertical">
                            <Setter TargetName="OutBox" Property="Width" Value="Auto" />
                            <Setter TargetName="OutBox" Property="Height" Value="16" />
                            <Setter TargetName="OutBox" Property="Margin" Value="0,-8" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="RangeSliderHorizontalTemplate" TargetType="{x:Type local:RangeSlider}">

        <Border
            x:Name="PART_SliderContainer"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">

            <Grid>

                <Grid Grid.ColumnSpan="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ItemsControl
                        x:Name="TopTickLabel"
                        Grid.Row="0"                        
                        VerticalAlignment="Center"
                        Visibility="Visible">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <infra1:UniformRow x:Name="TickLabelContainer" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=local:RangeSlider}}" Value="Horizontal">
                                        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
                                        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=local:RangeSlider}}" Value="Vertical">
                                        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=local:RangeSlider}}" Value="Vertical" />
                                            <Condition Binding="{Binding Path=Name, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" Value="TopTickLabel" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=local:RangeSlider}}" Value="Vertical" />
                                            <Condition Binding="{Binding Path=Name, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" Value="BottomTickLabel" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.Style>
                            <Style TargetType="ItemsControl">
                                <Setter Property="ItemsSource" Value="{Binding Path=GeneratedTicks, RelativeSource={RelativeSource FindAncestor, AncestorType=local:RangeSlider}}" />
                                <Setter Property="ItemTemplate" Value="{Binding Path=TickLabelTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType=local:RangeSlider}}" />
                            </Style>
                        </ItemsControl.Style>
                    </ItemsControl>

                    <TickBar
                        x:Name="TopTick"
                        Grid.Row="1"
                        Grid.RowSpan="1"
                        TickFrequency="1"
                        Fill="LightGray"
                        Placement="Top"
                        Visibility="Visible" />

                    <Grid x:Name="PART_ThumbGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Name="PART_StartArea"
                            Grid.Column="0"
                            IsHitTestVisible="False" />

                        <Border
                            Name="PART_EndArea"
                            Grid.Column="2"
                            IsHitTestVisible="False" />

                        <Thumb
                            Name="PART_StartThumb"
                            Grid.Column="0"
                            Margin="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource ThicknessConverter}}"
                            HorizontalAlignment="Right"
                            Style="{TemplateBinding StartThumbStyle}"
                            ToolTip="{TemplateBinding StartThumbToolTip}" />
                        <!-- Margin is half width of Outbox-->
                        <Thumb
                            Name="PART_EndThumb"
                            Grid.Column="2"
                               Margin="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource ThicknessConverter}}"
                            HorizontalAlignment="Left"
                            Style="{TemplateBinding EndThumbStyle}"
                            ToolTip="{TemplateBinding EndThumbToolTip}" />
                    </Grid>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="PART_StartThumb" Property="Foreground" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RangeSliderVertialTemplate" TargetType="{x:Type local:RangeSlider}">
        <Border
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid Name="PART_SliderContainer" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border
                    Name="PART_StartArea"
                    Grid.Row="0"
                    IsHitTestVisible="False" />

                <Border
                    Name="PART_EndArea"
                    Grid.Row="2"
                    IsHitTestVisible="False" />

                <Thumb
                    Name="PART_StartThumb"
                    Grid.Row="0"
                           Margin="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource ThicknessConverter}}"
                    VerticalAlignment="Bottom"
                     Style="{TemplateBinding StartThumbStyle}"
                    ToolTip="{TemplateBinding StartThumbToolTip}" />

                <Thumb
                    Name="PART_EndThumb"
                    Grid.Row="2"
                           Margin="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource ThicknessConverter}}"
                    VerticalAlignment="Top"
                    Style="{TemplateBinding EndThumbStyle}"
                    ToolTip="{TemplateBinding EndThumbToolTip}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="PART_StartThumb" Property="IsEnabled" Value="False" />
                <Setter TargetName="PART_EndThumb" Property="IsEnabled" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:RangeSlider}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="StartThumbStyle" Value="{StaticResource RangeSliderThumbStyle}" />
        <Setter Property="EndThumbStyle" Value="{StaticResource RangeSliderThumbStyle}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template" Value="{StaticResource RangeSliderHorizontalTemplate}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource RangeSliderVertialTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  TargetType="{x:Type local:DayRangeSlider}" BasedOn="{StaticResource {x:Type local:RangeSlider}}">
        <Setter Property="StartThumbStyle" Value="{StaticResource GripThumbStyle}" />
        <Setter Property="EndThumbStyle" Value="{StaticResource GripThumbStyle}" />
        <Setter Property="TickLabelTemplate">
            <Setter.Value>
                <DataTemplate>

                    <Label    
                           
                            Content="{Binding Converter={x:Static converter:LambdaConverter.DaysToDateTimeConverter}}" />

                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Opacity="0.1" Color="WhiteSmoke" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>