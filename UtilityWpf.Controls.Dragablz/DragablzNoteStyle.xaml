<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
                    xmlns:conv="clr-namespace:UtilityWpf.Converter;assembly=UtilityWpf"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:utl="http://schemas.utility.com/utilitywpf">

    <ResourceDictionary.MergedDictionaries>
        <utl:SharedResourceDictionary  Source="UtilityWpf.Controls.Dragablz;component/Geometry.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SineEase x:Key="Ease" EasingMode="EaseInOut" />
    <Storyboard x:Key="Enter">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
            <EasingDoubleKeyFrame
                EasingFunction="{StaticResource Ease}"
                KeyTime="0:0:0.3"
                Value="1.12" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
            <EasingDoubleKeyFrame
                EasingFunction="{StaticResource Ease}"
                KeyTime="0:0:0.3"
                Value="1.12" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Exit">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
            <EasingDoubleKeyFrame
                EasingFunction="{StaticResource Ease}"
                KeyTime="0:0:0.3"
                Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
            <EasingDoubleKeyFrame
                EasingFunction="{StaticResource Ease}"
                KeyTime="0:0:0.3"
                Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    
    <Style x:Key="DragablzNoteStyle" TargetType="dragablz:DragablzItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="MinWidth" Value="20"></Setter>
        <Setter Property="MinHeight" Value="5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">

                    <Viewbox HorizontalAlignment="Stretch" RenderTransformOrigin=".5, .5">

                        <Viewbox.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                        </Viewbox.RenderTransform>
                        <Border BorderBrush="Gray" HorizontalAlignment="Stretch" BorderThickness="0.3" CornerRadius="8" Grid.Column="0" >
                            <Grid IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=dragablz:DragablzItem}}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>             
                                <ContentPresenter  Margin="2,1,17,2"  Width="200"    Grid.Column="1"/>
                                <Thumb VerticalAlignment="Center"  dragablz:DragablzItem.IsCustomThumb="True" Height="15" Width="15" >
                                    <Thumb.Template>
                                        <ControlTemplate>

                                            <Border  Name="OutBox" >
                                                <Grid >
                                                    <Path   Margin="0,0,0,0"
                                                            x:Name="PathLeft"
                                                            Width="4"
                                                            Height="4"
                                                            Visibility="Visible"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Data="{StaticResource DotGeometry}"
                                                            RenderTransformOrigin="0.5,0.5"
                                                            Stretch="Uniform"
                                                            Stroke="Black"
                                                            StrokeThickness="2">
                                                        <Path.RenderTransform>
                                                            <TransformGroup>
                                                                <TranslateTransform />
                                                            </TransformGroup>
                                                        </Path.RenderTransform>
                                                    </Path>


                                                </Grid>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Setters>
                                                            <Setter Property="Background" >
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="Gold" Opacity="0.0"></SolidColorBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="CornerRadius" Value="15"></Setter>
                                                        </Style.Setters>

                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand" />
                                                            </Trigger>
                                                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                                                <BeginStoryboard>
                                                                    <Storyboard>

                                                                        <DoubleAnimation
                                                                            Storyboard.TargetProperty="Background.Opacity"
                                                                            From="0"
                                                                            To="0.5"
                                                                            Duration="0:0:0.2"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                                                <BeginStoryboard>
                                                                    <Storyboard>

                                                                        <DoubleAnimation
                                                                            Storyboard.TargetProperty="Background.Opacity"
                                                                            From="0.5"
                                                                            To="0"
                                                                            Duration="0:0:5"  />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </Border>
                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Enter}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Exit}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Enter}" />
                            </Trigger.EnterActions>                
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Exit}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>